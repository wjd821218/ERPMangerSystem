<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAFtJREFUOE9jYKAS
        +A80hxwMt/5/QwPEgAMHDuDFMDVQC8kzAMm15BkAcy1y8JHkhUFsAJLTcEYpSA1OL8AkiaGxRiMxLgBp
        xOsCXCkSlsAGrwGgREVRZiI7UwMACXFkDZul3iAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="exit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>